<!DOCTYPE html>
<html lang="en">
<head>
  <% include ../snippets/header %>
  <link rel="stylesheet" href="css/highlight/monokai-sublime.css  ">
</head>
<body>
  <% include ../snippets/navbar %>
  <div class="container main">
    <div class="row">
      <div class="three columns">
        <% include ../snippets/documentationSubnav %>
      </div>
      <div class="nine columns documentationMain">
        <div id="note">
          <%=messages%>
        </div>
        <h2>Documentation</h2>
        <h5>Learn how to code your API</h5>

        <h4 class='title'><a name="general">General</a></h4>
        <p>If you know Javascript, then coding an API is a piece of cake! If not, it's fairly easy to pick up and is very similar to other programming languages. Check out <a href="http://eloquentjavascript.net/" class='green' target="_blank">Eloquent Javascript</a> if you'd like a brief intro to the language and then check back here, we'll wait. :)</p>
        <p>The reason you need to know Javascript is because APIs are coded in Javascript! No learning a new language and its fancy syntax is required!</p>

        <h5 class='subtitle'><a name="APIObject">API Object</a></h5>
        <p>In RandomAPI, all of your <b>fields</b> are attached to the <b>api</b> object. A <b>field</b> is a Javascript property that holds the data that you generate and the <b>api</b> object is the central variable that RandomAPI will end up pushing into a results array.</p>
        <div class="row">
          <div class="six columns">
            <span class='caption'>API Code</span>
            <pre><code class="javascript">api.age      = random.numeric(1, 25);
api.dogYears = api.age * 7;</code></pre>
          </div>
          <div class="six columns">
            <span class='caption'>Result</span>
            <pre><code>{"results":[{"age":20,"dogYears":140}]}
            </code></pre>
          </div>
        </div>

        <h5 class='subtitle'><a name="variables">Variables and functions and comments, oh my!</a></h5>
        <p>Since APIs are coded in Javascript, you are free to do whatever you like in order to generate your data. This includes creating functions, variables, comments, etc. Just make sure that whatever data you generate gets attached to the api object or else it won't be available in your results.
        <div class="row">
          <div class="six columns">
            <span class='caption'>API Code</span>
            <pre><code class="javascript">// This is a comment that isn't evaluated
/*
    Multiline comments work as well!
*/
const fullName = "Billy Builder"; // Not attached to api object
var middleName = "The";
let age   = 5;
api.age   = age; // Attached to api object
api.phone = phoneNum(); // Calling user defined function

function phoneNum (format) {
  format = format || "(xxx) xxx-xxxx";
  return String(format).split('').map(digit => {
    return digit === 'x' ? random.numeric(0, 9) : digit;
  }).join('');
}</code></pre>
          </div>
          <div class="six columns">
            <span class='caption'>Result</span>
            <pre><code>{
  "results": [
    {
      "age": 5,
      "phone": "(336) 580-1131"
    }
  ]
}
            </code></pre>
          </div>
        </div>
        <h5 class='subtitle'><a name="sandbox">Sandbox</a></h5>
        <p>In order to keep other users and the server safe from malicious code, all APIs are executed in a sandboxed environment with limited native Node.js/Javascript functions available. Features like requiring modules, spawning child processes, access the file system, etc. are all disabled. All code is run in strict mode as well.</p>
        <p>Native methods and build in objects such as type casting using <b>String</b> and <b>Number</b> and using <b>JSON.stringify</b> are enabled and methods that can be chained to those data types such as <b>.toString()</b> are also available for use.


        <h4 class='title'><a name="availableFunctions">Available functions</a></h4>
        <p>RandomAPI includes some basic data generation functions in the sandboxed environment that your API can make use of. All of these included functions respect the <b>seed</b> value that is sent in through an API request</p>.

        <h5 class='subtitle'><a name="availableFunctionsRandom">Random</a></h5>
        <p>Generates a random number within a range as well as a string of random characters from a predefined or custom charset.</p>
        <table class="u-full-width">
          <thead>
            <tr>
              <th>Mode</th>
              <th>Arguments</th>
              <th>Example</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>numeric</td>
              <td>min, max</td>
              <td><pre><code class='javascript'>random.numeric(25, 85);    // 31
random.numeric('adsf', 2); // TypeError: Non numeric arguments provided
random.numeric(3, 2);      // RangeError: min is greater than max</code></pre></td>
            </tr>
            <tr>
              <td>special</td>
              <td>mode, length</td>
              <td><pre><code class='javascript'>// Available predefined charsets
// 1: abcdef1234567890
// 2: ABCDEF1234567890
// 3: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890
// 4: 0123456789
// 5: abcdefghijklmnopqrstuvwxyz
// 6: ABCDEFGHIJKLMNOPQRSTUVWXYZ
// 7: abcdefghijklmnopqrstuvwxyz1234567890
// 8: ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890

random.special(1, 10); // 616283c380
random.special(2, 10); // 18550F0761
random.special(3, 10); // oyE8seFUJW
random.special(4, 10); // 3064867594
random.special(5, 10); // pvdsmelnei
random.special(6, 10); // YIHHSSVRXR
random.special(7, 10); // auws4syf9k
random.special(8, 10); // SEFXPCCBIP</code></pre></td>
            </tr>
            <tr>
              <td>custom</td>
              <td>charset, length</td>
              <td><pre><code class='javascript'>random.custom("1111111112", 10); // 1112111111
random.custom("aBcáΩßDefG1290é\"", 10); // G"BcGé02D1
random.custom("œ∑´®†¥¨ˆøπåß∂ƒ©˙∆˚¬Ω≈ç√∫˜µ", 10); // ®®ø˚øƒ˚†Ωç</code></pre>Notice: There is a 10% chance of a 2 being chosen in example 1.</td>
            </tr>
          </tbody>
        </table>

        <h5 class='subtitle'><a name="availableFunctionsList">List</a></h5>
        <p>Chooses a random (or specified) item from either a list or provided array. If no lineNumber or indexNumber is provided, a random item will be chosen forom the list or array respectively.</p>
        <table class="u-full-width">
          <thead>
            <tr>
              <th>Arguments</th>
              <th>Example</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>listid, [lineNumber]</td>
              <td><pre><code class='javascript'>// list a1b2c3 contents:
// line 1: cat
// line 2: horse
// line 3: dog

list('a1b2c3'); // dog
list('a1b2c3', 2); // horse</code></pre>Notice: Example 2 chose line number 2 from list <b>a1b2c3</b>.<br>
            </tr>
            <tr>
              <td>array, [indexNumber]</td>
              <td><pre><code class='javascript'>list(['a', 'b', 'c']); // c
list(["male", "female"], 1); // female</code></pre>Warning: Indexes are zero based for arrays.<br>
            </tr>
          </tbody>
        </table>

        <h5 class='subtitle'><a name="availableFunctionsHash">Hash</a></h5>
        <p>Generate a hash from a string.</p>
        <table class="u-full-width">
          <thead>
            <tr>
              <th>Mode</th>
              <th>Arguments</th>
              <th>Example</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>md5</td>
              <td>str</td>
              <td><pre><code class='javascript'>hash.md5('mysoupersekurepasswurd!'); // 82961fecf4f7ee8d8a10390072332efd</code></pre>
            </tr>
            <tr>
              <td>sha1</td>
              <td>str</td>
              <td><pre><code class='javascript'>hash.sha1('mysoupersekurepasswurd!'); // 7babf75100bbe01ad3e0795831463dd9fd0ed517</code></pre>
            </tr>
            <tr>
              <td>shad256</td>
              <td>str</td>
              <td><pre><code class='javascript'>hash.sha256('mysoupersekurepasswurd!'); // a6360b34e354384e75de6241ba4fa3a33c6ef799c8943a04d000f19cb6af1051</code></pre>
            </tr>
          </tbody>
        </table>

        <h5 class='subtitle'><a name="availableFunctionsTimestamp">Timestamp</a></h5>
        <p>Returns the current unix timestamp.</p>
        <pre><code class='javascript'>timestamp(); //1466196805</code></pre>

        <h5 class='subtitle'><a name="availableFunctionsRequire">Require</a></h5>
        <p>Shhhh...coming soon.</p>
        <pre><code class='javascript'>const faker = require('faker'); // I wonder this will do... :)</code></pre>

        <h4 class='title'><a name="callingAPIs">Calling APIs</a></h4>
        <p>APIs can be accessed through via the <a href="https://randomapi.com/api" class='green' target="_blank">https://randomapi.com/api</a> endpoint.</p>
        <p>At a minimum, the endpoint requires a <b>key</b> and <b>ref</b> value. Key would be your API key and ref is the Ref ID of the API you want to access which can be found on the <a href="view/api" class='green' target="_blank">View APIs</a> page.</p>
        <p>APIs can be called in two different ways:</p>
        <pre><code class="html">https://randomapi.com/api/<span class='green'>123abc</span>?key=<span class='green'>ABCD-1234-EFGH-5678</span>      // Ref value is implied
https://randomapi.com/api/?key=<span class='green'>ABCD-1234-EFGH-5678</span>&ref=<span class='green'>123abc</span> // Ref value is explicitly stated</code></pre>

        <h5 class='subtitle'><a name="options">Options</a></h5>
        <p>You can add extra parameters to your API call to transform your data into different formats, specify how many results you'd like to generate, specify a seed, and even communicate with your api through the <b>getVar</b> function.</p>
        <table class="u-full-width">
          <thead>
            <tr>
              <th>Parameter</th>
              <th>Default value</th>
              <th>Example value</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>key</td>
              <td><i>null</i></td>
              <td>ABCD-1234-EFGH-5678</td>
              <td>(<span class='red'>required</span>) Your API Key</td>
            </tr>
            <tr>
              <td>ref</td>
              <td><i>null</i></td>
              <td>123abc</td>
              <td>(<span class='red'>required</span>) The Ref ID of the API that you want to access</td>
            </tr>
            <tr>
              <td>fmt</td>
              <td>json</td>
              <td>json, pretty, csv, xml, yaml</td>
              <td>Format your data to your liking</td>
            </tr>
            <tr>
              <td>results</td>
              <td>10</td>
              <td>20</td>
              <td>How many results would you like to have generated</td>
            </tr>
            <tr>
              <td>seed</td>
              <td><i>Random 16 character hex string</i></td>
              <td>huskiesarecute</td>
              <td>Generate the same results</td>
            </tr>
            <tr>
              <td>page</td>
              <td>1</td>
              <td>3</td>
              <td>Pagination through results</td>
            </tr>
            <tr>
              <td>noinfo</td>
              <td><i>null</i></td>
              <td><i>No value required</i></td>
              <td>Only show the results. Don't show the info property</td>
            </tr>
            <tr>
              <td>dl</td>
              <td><i>null</i></td>
              <td><i>No value required</i></td>
              <td>Download the file with proper headers and file extension</td>
            </tr>
            <tr>
              <td>callback</td>
              <td><i>null</i></td>
              <td>fetchdata</td>
              <td>For JSONP requests. Only available with json format</td>
            </tr>
            <tr>
              <td><i>Custom Parameter</i></td>
              <td><i>null</i></td>
              <td>mode=3</td>
              <td>You can specify custom parameters and then access them in your API using the <b>getVar</b> function.</td>
            </tr>
          </tbody>
        </table>
        <pre><code class="html">https://randomapi.com/api/123abc?key=ABCD-1234-EFGH-5678&results=<span class='green'>25</span>&seed=<span class='green'>huskiesarecute</span>&page=<span class='green'>3</span>
https://randomapi.com/api/?key=ABCD-1234-EFGH-5678&ref=123abc&callback=<span class='green'>fetchData</span>
https://randomapi.com/api/?key=ABCD-1234-EFGH-5678&ref=123abc&fmt=<span class='green'>xml</span>&<span class='green'>dl</span>
https://randomapi.com/api/?key=ABCD-1234-EFGH-5678&ref=123abc&fmt=<span class='green'>pretty</span>&<span class='green'>noinfo</span></code></pre>
      </div>
    </div>
  </div>
  <% include ../snippets/footer %>
  <script src="js/highlight.pack.js"></script>
  <script src="js/documentation.js"></script>
</body>
</html>
