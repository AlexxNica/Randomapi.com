<!DOCTYPE html>
<html lang="en">
<head>
  <% include ../snippets/header %>
  <link rel="stylesheet" href="css/highlight/monokai-sublime.css">
  <link href="//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css" rel="stylesheet">
</head>
<body>
  <% include ../snippets/navbar %>
  <div class="main">
    <div class="two columns">
      <% include ../snippets/documentationSubnav %>
    </div>
    <div class="documentationMain">
      <h2>Documentation</h2>
      <h5>Learn how to code your API</h5>

      <h4 class='title'><a name="general">General</a></h4>
      <p>If you know Javascript, then coding an API is a piece of cake! If not, it's fairly easy to pick up and is very similar to other programming languages. Check out <a href="http://eloquentjavascript.net/" class='green' target="_blank">Eloquent Javascript</a> if you'd like a brief intro to the language and then check back here, we'll wait. :)</p>
      <p>The reason you need to know Javascript is because APIs are coded in Javascript! No learning a new language and its fancy syntax required!</p>

      <h5 class='subtitle'><a name="APIObject">API Object</a></h5>
      <p>In RandomAPI, all of your <b>fields</b> are attached to the <b>api</b> object. A <b>field</b> is a Javascript property that holds the data that you want to generate and the <b>api</b> object is the central variable that RandomAPI will end up pushing into a results array.</p>
      <div class="row">
        <div class="six columns">
          <span class='caption'>API Code</span>
          <pre><code class="javascript">api.age      = random.numeric(1, 25);
api.dogYears = api.age * 7;</code></pre>
        </div>
        <div class="six columns">
          <span class='caption'>Result</span>
          <pre><code>{"results":[{"age":20,"dogYears":140}]}
          </code></pre>
        </div>
      </div>

      <h5 class='subtitle'><a name="variables">Variables and functions and comments, oh my!</a></h5>
      <p>Since APIs are coded in Javascript, you are free to do whatever you like in order to generate your data. This includes creating functions, variables, comments, etc. Just make sure that whatever data you generate gets attached to the api object or else it won't be available in your results.
      <div class="row">
        <div class="six columns">
          <span class='caption'>API Code</span>
          <pre><code class="javascript">// This is a comment that isn't evaluated
/*
  Multiline comments work as well!
*/
const fullName = "Billy Builder"; // Not attached to api object
var middleName = "The";
let age   = 5;
api.age   = age; // Attached to api object
api.phone = phoneNum(); // Calling user defined function

function phoneNum(format) {
  format = format || "(xxx) xxx-xxxx";
  return String(format).split('').map(digit => {
    return digit === 'x' ? random.numeric(0, 9) : digit;
  }).join('');
}</code></pre>
        </div>
        <div class="six columns">
          <span class='caption'>Result</span>
          <pre><code>{
  "results": [
    {
      "age": 5,
      "phone": "(336) 580-1131"
    }
  ]
}
          </code></pre>
        </div>
      </div>
      <h5 class='subtitle'><a name="sandbox">Sandbox</a></h5>
      <p>In order to keep other users and the server safe from malicious code, all APIs are executed in a sandboxed environment in a seperate process with limited native Node.js/Javascript functions available. Features like requiring native built-in modules, spawning child processes, access the file system, etc. are all disabled. All code is run in strict mode as well.</p>
      <p>Native methods and built-in objects such as type casting using <b>String</b> and <b>Number</b> and using <b>JSON.stringify</b> are enabled and methods that can be chained to those data types such as <b>.toString()</b> are also available for use.

      <div class="ads">
        <% include ../snippets/ads %>
      </div>

      <h4 class='title'><a name="availableFunctions">Available functions</a></h4>
      <p>RandomAPI includes some basic data generation functions that your API can make use of. All of these included functions respect the <b>seed</b> value that is sent in through an API request (except for timestamp since it returns the <b>current</b> time).</p>

      <h5 class='subtitle'><a name="availableFunctionsRandom">random</a></h5>
      <p>Generates a random number within a range as well as a string of random characters from a predefined or custom charset.</p>
      <table class="u-full-width">
        <thead>
          <tr>
            <th>Mode</th>
            <th>Arguments</th>
            <th colspan='5'>Example</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>numeric</td>
            <td>min, max</td>
            <td colspan='5'><pre><code class='javascript'>random.numeric(25, 85);    // 31
random.numeric('adsf', 2); // TypeError: Non numeric arguments provided
random.numeric(3, 2);      // RangeError: min is greater than max</code></pre></td>
          </tr>
          <tr>
            <td>special</td>
            <td>mode, length</td>
            <td colspan='5'><pre><code class='javascript'>// Available predefined charsets
// 1: abcdef1234567890
// 2: ABCDEF1234567890
// 3: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890
// 4: 0123456789
// 5: abcdefghijklmnopqrstuvwxyz
// 6: ABCDEFGHIJKLMNOPQRSTUVWXYZ
// 7: abcdefghijklmnopqrstuvwxyz1234567890
// 8: ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890

random.special(1, 10); // 616283c380
random.special(2, 10); // 18550F0761
random.special(3, 10); // oyE8seFUJW
random.special(4, 10); // 3064867594
random.special(5, 10); // pvdsmelnei
random.special(6, 10); // YIHHSSVRXR
random.special(7, 10); // auws4syf9k
random.special(8, 10); // SEFXPCCBIP</code></pre></td>
          </tr>
          <tr>
            <td>custom</td>
            <td>charset, length</td>
            <td colspan='5'><pre><code class='javascript'>random.custom("1111111112", 10); // 1112111111
random.custom("aBcáΩßDefG1290é\"", 10); // G"BcGé02D1
random.custom("œ∑´®†¥¨ˆøπåß∂ƒ©˙∆˚¬Ω≈ç√∫˜µ", 10); // ®®ø˚øƒ˚†Ωç</code></pre>Notice: There is a 10% chance of a 2 being chosen in example 1.</td>
          </tr>
        </tbody>
      </table>

      <h5 class='subtitle'><a name="availableFunctionsList">list</a></h5>
      <p>Chooses a random (or specified) item from either a list or provided array. If no lineNumber or indexNumber is provided, a random item will be chosen from the list or array respectively.</p>
      <table class="u-full-width">
        <thead>
          <tr>
            <th>Mode</th>
            <th>Arguments</th>
            <th colspan='2'>Example</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>List</td>
            <td>listRef, [lineNumber]</td>
            <td colspan='2'><pre><code class='javascript'>// list a1b2c3 contents:
// line 1: cat
// line 2: horse
// line 3: dog

list('a1b2c3'); // dog
list('a1b2c3', 2); // horse</code></pre>Notice: Example 2 chose line number 2 from list <b>a1b2c3</b>.</td>
          </tr>
          <tr>
            <td>Array</td>
            <td>array, [indexNumber]</td>
            <td colspan='2'><pre><code class='javascript'>list(['a', 'b', 'c']); // c
list(["male", "female"], 1); // female</code></pre>Warning: Indexes are zero based for arrays.</td>
          </tr>
        </tbody>
      </table>

      <h5 class='subtitle'><a name="availableFunctionsHash">hash</a></h5>
      <p>Generate a hash from a string.</p>
      <table class="u-full-width">
        <thead>
          <tr>
            <th>Mode</th>
            <th>Arguments</th>
            <th colspan='5'>Example</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>md5</td>
            <td>str</td>
            <td colspan='5'><pre><code class='javascript'>// 82961fecf4f7ee8d8a10390072332efd
hash.md5('mysoupersekurepasswurd!');</code></pre></td>
          </tr>
          <tr>
            <td>sha1</td>
            <td>str</td>
            <td colspan='5'><pre><code class='javascript'>// 7babf75100bbe01ad3e0795831463dd9fd0ed517
hash.sha1('mysoupersekurepasswurd!');</code></pre></td>
          </tr>
          <tr>
            <td>sha256</td>
            <td>str</td>
            <td colspan='5'><pre><code class='javascript'>// a6360b34e354384e75de6241ba4fa3a33c6ef799c8943a04d000f19cb6af1051
hash.sha256('mysoupersekurepasswurd!');</code></pre></td>
          </tr>
        </tbody>
      </table>

      <h5 class='subtitle'><a name="availableFunctionsTimestamp">timestamp</a></h5>
      <p>Returns the current unix timestamp.</p>
      <pre><code class='javascript timestamp'>timestamp(); //</code></pre>

      <h5 class='subtitle'><a name="availableFunctionsGetVar">getVar</a></h5>
      <p>Fetches the value of GET variables in the API query. Defaults to null if the requested GET variable is undefined.</p>
      <div class="row">
        <div class="six columns">
          <span class='caption'>API Code</span>
          <pre><code class='javascript'>api.max = Number(getVar("max")) || 10;
api.num = random.numeric(0, api.max);</code></pre>
        </div>
        <div class="six columns">
          <span class='caption'>Result</span>
          <pre><code>// <%=basehref%>/api/123456?max=25
{"results":[{"max": 100,"num": 21}]}

// <%=basehref%>/api/123456
{"results":[{"max": 10,"num": 4}]}</code></pre>
        </div>
      </div>
      <p>You can also access some internal variables as well with getVar. This could be useful if you wanted access to the string/numeric seed that the generator is using or maybe wanted to know the format your API was being requested with.</p>
      <div class="row">
        <div class="six columns">
          <span class='caption'>API Code</span>
          <pre><code class='javascript'>api.seed    = getVar('seed');
api.numSeed = getVar('numericSeed');
api.format  = getVar('fmt');
api.key     = getVar('key');
api.ref     = getVar('ref');</code></pre>
        </div>
        <div class="six columns">
          <span class='caption'>Result</span>
          <pre><code>{
  "results": [
    {
      "seed": "7583c1fdce1943f4",
      "numericSeed": 4200665598,
      "format": "pretty",
      "key": "ABCD-1234-EFGH-5678",
      "ref": "1234abcd"
    }
  ]
}</code></pre>
        </div>
      </div>

      <h5 class='subtitle'><a name="availableFunctionsMisc">Misc</a></h5>
      <p>Some other good to know things regarding the generator.</p>
      <ul>
        <li>The generator uses internal variables that start with _API, so avoid using variables in that namespace if you can or else unexpected behavior can happen.</li>
      </ul>
      <p>If you have made an API/Snippet that requires a PRNG, you can access the generators internal PRNG with the prng function. This will return, direct from the Mersenne Twister module the generator is using, a number on [0,1) real interval.
      <div class="row">
        <div class="six columns">
          <span class='caption'>API Code</span>
          <pre><code class='javascript'>api.a = prng();</code></pre>
        </div>
        <div class="six columns">
          <span class='caption'>Result</span>
          <pre><code>{
  "results": [
    {
      "a": 0.5300652552396059
    }
  ]
}</code></pre>
        </div>
      </div>

      <h4 class='title'><a name="globalSnippets">Global Snippets</a></h4>
      <p>While native, built-in modules aren't accessible through require, some libraries that we have found helpful for generating data will be added to the RandomAPI generators for use in your APIs. Currently, the following modules are available using require:</p>
      <ul>
        <li><a href="https://www.npmjs.com/package/faker" class='green' target="_blank">Faker</a></li>
        <li><a href="https://www.npmjs.com/package/deity" class='green' target="_blank">Deity</a></li>
        <li><a href="http://momentjs.com/" class='green' target="_blank">Moment</a></li>
      </ul>
      <div class="row">
        <div class="six columns">
          <span class='caption'>API Code</span>
          <pre><code class="javascript">const faker = require('faker');
api.name    = faker.name.findName();</code></pre>
        </div>
        <div class="six columns">
          <span class='caption'>Result</span>
          <pre><code>{"results":[{"name": "Samir Daugherty"}]}
          </code></pre>
        </div>
      </div>
      <p>If you have a suggestion for a module that we should add, send us a tweet or DM <a href="https://twitter.com/randomapi" class='green' target="_blank">@RandomAPI</a>.</p>

      <h4 class='title'><a name="snippets">Snippets</a></h4>
      <p>Snippets are user defined pieces of code that you can include in your API. If you've made a snippet that you'd like to share for others to use, you can publish your snippet!</p>
      <p>Snippets are coded in basically the same way as a normal API except for these key differences:</p>
      <ul>
        <li>Objects are attached to the <b>snippet</b> object instead of the <b>api</b> object.</li>
        <li>Only Global Snippets can be used in your snippet. You can't require other snippets from your snippet.</li>
        <li>Snippet names <b>must</b> be unique in regards to your account.</li>
      </ul>

      <h5 class='subtitle'><a name="codingSnippets">Coding</a></h5>
      <div class="row">
        <div class="six columns">
          <span class='caption'>Coding a snippet</span>
          <pre><code class="javascript">// keiths stuff
const faker = require('faker');

// Make Faker respect RandomAPI's seed
faker.seed(getVar('numericSeed'));

// phoneNumber property attached to snippet
snippet.phoneNumber = function(format) {
  format = format || "(xxx) xxx-xxxx";
  return String(format).split('').map(digit => {
    return digit === 'x' ? random.numeric(0, 9) : digit;
  }).join('');
};

// randomName property attached to snippet
snippet.randomName = function() {
  return faker.name.findName();
};</code></pre>
        </div>
        <div class="six columns">
          <span class='caption'>Using a snippet</span>
          <pre><code>const keith = require('keith/keiths stuff');
api.phone   = keith.phoneNumber();
api.name    = keith.randomName();

// Also works
api.phone2  = require('keith/keiths stuff/1').phoneNumber();</code></pre>
          <span class='caption'>Result</span>
          <pre><code>{
  "phoneNumber": "(605) 401-1008",
  "randomName": "Nadia Johns"
}</code></pre>
        </div>
      </div>
      <p class="clear">If you only want to have one snippet, you can make a default snippet by overriding the snippet object. </p>
      <div class="row">
        <div class="six columns">
          <span class='caption'>Coding a snippet</span>
          <pre><code class="javascript">// invoice number generator
const moment = require('moment');
snippet = function() {
    return `${moment().format('YYMMDD')}-${random.special(6, 3)}-${random.special(4,5)}`;
};</code></pre>
        </div>
        <div class="six columns">
          <span class='caption'>Using a snippet</span>
          <pre><code>const invoice = require('keith/invoice number generator');
api.invoiceID = invoice();</code></pre>
          <span class='caption'>Result</span>
          <pre><code>{
  "invoiceID": "160710-SIO-97604"
}</code></pre>
        </div>
      </div>
      <p class="clear">You can also access snippet properties straight from the require statement if you want. </p>
      <div class="row">
        <div class="six columns">
          <span class='caption'>Coding a snippet</span>
          <pre><code class="javascript">// randomNum...kinda redundant
snippet.randomNum = (min, max) => random.numeric(min, max);</code></pre>
        </div>
        <div class="six columns">
          <span class='caption'>Using a snippet</span>
          <pre><code>const randomNum = require('keith/randomNum').randomNum;
api.a = randomNum();</code></pre>
          <span class='caption'>Result</span>
          <pre><code>{
  "num": 37
}</code></pre>
        </div>
      </div>

      <h5 class='subtitle'><a name="publishingSnippets">Publishing</a></h5>
      <p>If you've made an awesome snippet that you think would be useful for others, you can publish it!<br>
      Here are some basic rules and tips on publishing snippets</p>
      <ul>
        <li>Once published, snippets can not be removed.</li>
          <ol>This is to prevent other users' APIs from breaking unexpectedly. Make sure that you really want to publish a snippet before you click confim.</ol>
        <li>Published snippets will be given a revision number that starts at 1.</li>
          <ol>Once a snippet is published, you must provide a version number in the snippet signature when you use the require function.</ol>
        <li>Source code of revisions that are published can not be modified. You can still modify the revision's description though.</li>
        <li>If you have made a mistake or want to make an improvement to a snippet, you can create a new revision.</li>
        <li>Users can search for snippets by clicking the search menu item.</li>
          <ol>Search depends on the tags/keywords that you give a snippet. Make sure that you provide good tags that users will most likely search for in order to have the best chance of your snippet being found.</ol>
      </ul>

      <h4 class='title'><a name="callingAPIs">Calling APIs</a></h4>
      <p>APIs can be accessed via the <a href="<%=basehref%>api" class='green' target="_blank"><%=basehref%>api</a> endpoint.</p>
      <p>At a minimum, the endpoint requires a <b>key</b> and <b>ref</b> value or a public hash value. Key would be your API key and ref is the Ref ID of the API you want to access which can be found on the <a href="view/api" class='green' target="_blank">View APIs</a> page.</p>
      <p>Public hashes are another way that you can access your API without accidentally exposing your API Key and API Ref ID. The user segment of the info block from your results will also be removed by default when your API is called using this method. They can be found by clicking <b>Run API (public URL)</b> on the <a href="view/api" class='green' target="_blank">View APIs</a> page.</p>
      <p>APIs can be called in three different ways:</p>
      <pre><code class="html"><%=basehref%>api/<span class='green'>1234abcd</span>?key=<span class='green'>ABCD-1234-EFGH-5678</span>      // Ref value is implied
<%=basehref%>api/?key=<span class='green'>ABCD-1234-EFGH-5678</span>&ref=<span class='green'>1234abcd</span> // Ref value is explicitly stated
<%=basehref%>api/<span class='green'>1234567890abcdef1234567890abcdef</span>      // Public hash</code></pre>

      <h5 class='subtitle'><a name="options">Options</a></h5>
      <p>You can add extra parameters to your API call to transform your data into different formats, specify how many results you'd like to generate, specify a seed, and even communicate with your api through the <b>getVar</b> function</p>
      <table class="u-full-width">
        <thead>
          <tr>
            <th>Parameter</th>
            <th>Default value</th>
            <th>Example value</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>key</td>
            <td><i>null</i></td>
            <td>ABCD-1234-EFGH-5678</td>
            <td>(<span class='red'>required</span>) Your API Key</td>
          </tr>
          <tr>
            <td>ref</td>
            <td><i>null</i></td>
            <td>1234abcd</td>
            <td>(<span class='red'>required</span>) The Ref ID of the API that you want to access</td>
          </tr>
          <tr>
            <td>fmt</td>
            <td>json</td>
            <td>json, pretty, csv, xml, yaml</td>
            <td>Format your data to your liking</td>
          </tr>
          <tr>
            <td>results</td>
            <td>10</td>
            <td>20</td>
            <td>How many results would you like to have generated</td>
          </tr>
          <tr>
            <td>seed</td>
            <td><i>Random 16 character hex string</i></td>
            <td>huskiesarecute</td>
            <td>Generate the same results</td>
          </tr>
          <tr>
            <td>page</td>
            <td>1</td>
            <td>3</td>
            <td>Pagination through results</td>
          </tr>
          <tr>
            <td>hideuserinfo</td>
            <td><i>null</i></td>
            <td><i>No value required</i></td>
            <td>Remove the user segment from the info property</td>
          </tr>
          <tr>
            <td>noinfo</td>
            <td><i>null</i></td>
            <td><i>No value required</i></td>
            <td>Only show the results. Don't show the info property</td>
          </tr>
          <tr>
            <td>dl</td>
            <td><i>null</i></td>
            <td><i>No value required</i></td>
            <td>Download the file with proper headers and file extension</td>
          </tr>
          <tr>
            <td>callback</td>
            <td><i>null</i></td>
            <td>fetchdata</td>
            <td>For JSONP requests. Only available with json format</td>
          </tr>
          <tr>
            <td><i>Custom Parameter</i></td>
            <td><i>null</i></td>
            <td>mode=3</td>
            <td>You can specify custom parameters and then access them in your API using the <b>getVar</b> function.</td>
          </tr>
        </tbody>
      </table>
      <pre><code class="html"><%=basehref%>api/1234abcd?key=ABCD-1234-EFGH-5678&results=<span class='green'>25</span>&seed=<span class='green'>huskiesarecute</span>&page=<span class='green'>3</span>
<%=basehref%>api/?key=ABCD-1234-EFGH-5678&ref=1234abcd&callback=<span class='green'>fetchData</span>
<%=basehref%>api/?key=ABCD-1234-EFGH-5678&ref=1234abcd&fmt=<span class='green'>xml</span>&<span class='green'>dl</span>
<%=basehref%>api/?key=ABCD-1234-EFGH-5678&ref=1234abcd&fmt=<span class='green'>pretty</span>&<span class='green'>noinfo</span></code></pre>

      <h5 class='subtitle'><a name="errors">Errors</a></h5>
      <table class="u-full-width">
        <thead>
          <tr>
            <th colspan='2'>Error Code</th>
            <th>HTTP Code</th>
            <th colspan='2'>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td colspan='2'>MISSING_API_KEY</td>
            <td>404</td>
            <td colspan='2'>
              The API call could not be complete since an API key was not provided. Make sure you include your key with the <span class='green'>key</span> parameter.
            </td>
          </tr>
          <tr>
            <td colspan='2'>MISSING_API_REF</td>
            <td>404</td>
            <td colspan='2'>
              The API call could not be complete since an API ref was not provided. Make sure you include your ref with the <span class='green'>ref</span> parameter or specify it in the URI after <span class='green'>/api/REF_KEY</span>.
            </td>
          </tr>
          <tr>
            <td colspan='2'>INVALID_API</td>
            <td>404</td>
            <td colspan='2'>
              The API ref that was provided was not found.
            </td>
          </tr>
          <tr>
            <td colspan='2'>INVALID_API_HASH</td>
            <td>404</td>
            <td colspan='2'>
              The API public hash that was provided was not found.
            </td>
          </tr>
          <tr>
            <td colspan='2'>SUBSCRIPTION_PAYMENT_OVERDUE</td>
            <td>403</td>
            <td colspan='2'>
              Your latest invoice was not paid in time. Please go to your account settings to resolve the issue.
            </td>
          </tr>
          <tr>
            <td colspan='2'>ACCOUNT_SOFTLOCKED</td>
            <td>403</td>
            <td colspan='2'>
              Your account was recently downgraded to the free tier (due to a canceled subscription) and your account quotas are currently higher than the free tier allows. Delete APIs, Lists, and Snippets until they are within the free tier limits or restart your subscription to your previous tier.
            </td>
          </tr>
          <tr>
            <td colspan='2'>API_QUOTA_EXCEEDED</td>
            <td>403</td>
            <td colspan='2'>
              You've used up your daily number of results. Please upgrade or wait until your quota resets at midnight in the timezone you selected when you signed up.
            </td>
          </tr>
          <tr>
            <td colspan='2'>INVALID_API_KEY</td>
            <td>401</td>
            <td colspan='2'>
              The API key that was provided was invalid. API keys are case-insensitive, however, the dashes are required.
            </td>
          </tr>
          <tr>
            <td colspan='2'>UNAUTHORIZED_USER</td>
            <td>401</td>
            <td colspan='2'>
              Your API key does not have the proper permissions to access this API.
            </td>
          </tr>
          <tr>
            <td colspan='2'>GENERATOR_OFFLINE</td>
            <td>500</td>
            <td colspan='2'>
              Something bad has happened and the generator has crashed. Please let us know by sending us a tweet or DM <a href="https://twitter.com/randomapi" class='green' target="_blank">@RandomAPI</a>.
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
  <a href="javascript:" id="return-to-top"><i class="icon-chevron-up"></i></a>
  <% include ../snippets/footer %>
  <script src="js/highlight.pack.js"></script>
  <script src="js/documentation.js"></script>
</body>
</html>
